package com.ctf.log4droid.mt_body;

import com.ctf.log4droid.protobuf.log4droid;
import com.ctf.log4droid.protobuf.log4droid.RSQ;
import com.ctf.log4droid.protobuf.log4droid._mcwill.MCWILL_ACCOUNT;
import com.ctf.log4droid.protobuf.log4droid._mcwill.MCWILL_STATE;
import com.google.protobuf.InvalidProtocolBufferException;
import io.netty.buffer.ByteBuf;

import java.io.Serializable;

/*
 * This file is auto generated by *proto_convert*
 *  and should *NOT* be modified manually!!!
 */
public class Mcwill implements Serializable {
    //---------------------------------------------------------------------------
    // ALL fields (private)
    //---------------------------------------------------------------------------
    //required fields

    //optional fields
    private MCWILL_STATE state;
    private MCWILL_ACCOUNT account;
    private int rssi;
    private RSQ rsq;
    private int nid;
    private int cid;
    private int up_speed;
    private int dn_speed;
    private float snr;
    private String version;
    private String uid;

    //---------------------------------------------------------------------------
    // DEFAULT value for optional fields (private static final)
    //---------------------------------------------------------------------------
    private static final MCWILL_STATE DEFAULT_STATE = null;
    private static final MCWILL_ACCOUNT DEFAULT_ACCOUNT = null;
    private static final int DEFAULT_RSSI = -1;
    private static final RSQ DEFAULT_RSQ = null;
    private static final int DEFAULT_NID = -1;
    private static final int DEFAULT_CID = -1;
    private static final int DEFAULT_UP_SPEED = -1;
    private static final int DEFAULT_DN_SPEED = -1;
    private static final float DEFAULT_SNR = -1.0f;
    private static final String DEFAULT_VERSION = null;
    private static final String DEFAULT_UID = null;

    //---------------------------------------------------------------------------
    // Constructed Function
    //---------------------------------------------------------------------------
    // <> is *required*
    public Mcwill() {
        this(DEFAULT_STATE, DEFAULT_ACCOUNT, DEFAULT_RSSI, DEFAULT_RSQ, DEFAULT_NID, DEFAULT_CID, DEFAULT_UP_SPEED, DEFAULT_DN_SPEED, DEFAULT_SNR, DEFAULT_VERSION, DEFAULT_UID);
    }

    public Mcwill(MCWILL_STATE state, MCWILL_ACCOUNT account, int rssi, RSQ rsq, int nid, int cid, int up_speed, int dn_speed, float snr, String version, String uid) {
        this.state = state;
        this.account = account;
        this.rssi = rssi;
        this.rsq = rsq;
        this.nid = nid;
        this.cid = cid;
        this.up_speed = up_speed;
        this.dn_speed = dn_speed;
        this.snr = snr;
        this.version = version;
        this.uid = uid;
    }

    //---------------------------------------------------------------------------
    // decode Constructed Function
    //---------------------------------------------------------------------------

    public static Mcwill parseFrom(byte[] bytes) throws InvalidProtocolBufferException {
        log4droid._mcwill mcwill = log4droid._mcwill.parseFrom(bytes);


        MCWILL_STATE state = mcwill.getState();
        MCWILL_ACCOUNT account = mcwill.getAccount();
        int rssi = mcwill.getRssi();
        RSQ rsq = mcwill.getRsq();
        int nid = mcwill.getNid();
        int cid = mcwill.getCid();
        int up_speed = mcwill.getUpSpeed();
        int dn_speed = mcwill.getDnSpeed();
        float snr = mcwill.getSnr();
        String version = mcwill.getVersion();
        String uid = mcwill.getUid();

        Mcwill _ret = new Mcwill(state,account,rssi,rsq,nid,cid,up_speed,dn_speed,snr,version,uid);
        return _ret;
    }

    public Mcwill(log4droid._mcwill mcwill) {
        //decode with required fields
        this();
        //---------------------------
        //optional fields
        if (mcwill.hasState()) {
            this.state = mcwill.getState();
        }
        if (mcwill.hasAccount()) {
            this.account = mcwill.getAccount();
        }
        if (mcwill.hasRssi()) {
            this.rssi = mcwill.getRssi();
        }
        if (mcwill.hasRsq()) {
            this.rsq = mcwill.getRsq();
        }
        if (mcwill.hasNid()) {
            this.nid = mcwill.getNid();
        }
        if (mcwill.hasCid()) {
            this.cid = mcwill.getCid();
        }
        if (mcwill.hasUpSpeed()) {
            this.up_speed = mcwill.getUpSpeed();
        }
        if (mcwill.hasDnSpeed()) {
            this.dn_speed = mcwill.getDnSpeed();
        }
        if (mcwill.hasSnr()) {
            this.snr = mcwill.getSnr();
        }
        if (mcwill.hasVersion()) {
            this.version = mcwill.getVersion();
        }
        if (mcwill.hasUid()) {
            this.uid = mcwill.getUid();
        }
    }

    //---------------------------------------------------------------------------
    // getter Functions
    //---------------------------------------------------------------------------
    //required fields

    //optional fields
    public boolean hasState() {
        return (this.state != DEFAULT_STATE);
    }

    public MCWILL_STATE getState() {
        return this.state;
    }

    public boolean hasAccount() {
        return (this.account != DEFAULT_ACCOUNT);
    }

    public MCWILL_ACCOUNT getAccount() {
        return this.account;
    }

    public boolean hasRssi() {
        return (this.rssi != DEFAULT_RSSI);
    }

    public int getRssi() {
        return this.rssi;
    }

    public boolean hasRsq() {
        return (this.rsq != DEFAULT_RSQ);
    }

    public RSQ getRsq() {
        return this.rsq;
    }

    public boolean hasNid() {
        return (this.nid != DEFAULT_NID);
    }

    public int getNid() {
        return this.nid;
    }

    public boolean hasCid() {
        return (this.cid != DEFAULT_CID);
    }

    public int getCid() {
        return this.cid;
    }

    public boolean hasUpSpeed() {
        return (this.up_speed != DEFAULT_UP_SPEED);
    }

    public int getUpSpeed() {
        return this.up_speed;
    }

    public boolean hasDnSpeed() {
        return (this.dn_speed != DEFAULT_DN_SPEED);
    }

    public int getDnSpeed() {
        return this.dn_speed;
    }

    public boolean hasSnr() {
        return (this.snr != DEFAULT_SNR);
    }

    public float getSnr() {
        return this.snr;
    }

    public boolean hasVersion() {
        return (this.version != DEFAULT_VERSION);
    }

    public String getVersion() {
        return this.version;
    }

    public boolean hasUid() {
        return (this.uid != DEFAULT_UID);
    }

    public String getUid() {
        return this.uid;
    }

    //---------------------------------------------------------------------------
    // setter Functions
    //---------------------------------------------------------------------------
    public void setState(MCWILL_STATE state) {
        this.state = state;
    }

    public void setAccount(MCWILL_ACCOUNT account) {
        this.account = account;
    }

    public void setRssi(int rssi) {
        this.rssi = rssi;
    }

    public void setRsq(RSQ rsq) {
        this.rsq = rsq;
    }

    public void setNid(int nid) {
        this.nid = nid;
    }

    public void setCid(int cid) {
        this.cid = cid;
    }

    public void setUpSpeed(int up_speed) {
        this.up_speed = up_speed;
    }

    public void setDnSpeed(int dn_speed) {
        this.dn_speed = dn_speed;
    }

    public void setSnr(float snr) {
        this.snr = snr;
    }

    public void setVersion(String version) {
        this.version = version;
    }

    public void setUid(String uid) {
        this.uid = uid;
    }

    //--------------------------------------
    // encode (Java obj => Proto builder)
    //--------------------------------------

    public int toBytes(ByteBuf buf) {
        log4droid._mcwill.Builder builder = log4droid._mcwill.newBuilder();

        //required fields

        //optional fields
        if (hasState()) {
            builder.setState(state);
        }
        if (hasAccount()) {
            builder.setAccount(account);
        }
        if (hasRssi()) {
            builder.setRssi(rssi);
        }
        if (hasRsq()) {
            builder.setRsq(rsq);
        }
        if (hasNid()) {
            builder.setNid(nid);
        }
        if (hasCid()) {
            builder.setCid(cid);
        }
        if (hasUpSpeed()) {
            builder.setUpSpeed(up_speed);
        }
        if (hasDnSpeed()) {
            builder.setDnSpeed(dn_speed);
        }
        if (hasSnr()) {
            builder.setSnr(snr);
        }
        if (hasVersion()) {
            builder.setVersion(version);
        }
        if (hasUid()) {
            builder.setUid(uid);
        }

        byte[] bytes = builder.build().toByteArray();
        buf.writeBytes(bytes);
        return bytes.length;
    }
    public log4droid._mcwill.Builder toBuilder() {
        log4droid._mcwill.Builder builder = log4droid._mcwill.newBuilder();

        //required fields

        //optional fields
        if (hasState()) {
            builder.setState(state);
        }
        if (hasAccount()) {
            builder.setAccount(account);
        }
        if (hasRssi()) {
            builder.setRssi(rssi);
        }
        if (hasRsq()) {
            builder.setRsq(rsq);
        }
        if (hasNid()) {
            builder.setNid(nid);
        }
        if (hasCid()) {
            builder.setCid(cid);
        }
        if (hasUpSpeed()) {
            builder.setUpSpeed(up_speed);
        }
        if (hasDnSpeed()) {
            builder.setDnSpeed(dn_speed);
        }
        if (hasSnr()) {
            builder.setSnr(snr);
        }
        if (hasVersion()) {
            builder.setVersion(version);
        }
        if (hasUid()) {
            builder.setUid(uid);
        }

        //return
        return builder;
    }
    //---------------------------------------------------------------------------
    // toString Function
    //---------------------------------------------------------------------------
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();

        sb.append("Mcwill { ");

        //required fields

        //optional fields
        if (hasState()) {
            sb.append("state:").append(state).append(",");
        }
        if (hasAccount()) {
            sb.append("account:").append(account).append(",");
        }
        if (hasRssi()) {
            sb.append("rssi:").append(rssi).append(",");
        }
        if (hasRsq()) {
            sb.append("rsq:").append(rsq).append(",");
        }
        if (hasNid()) {
            sb.append("nid:").append(nid).append(",");
        }
        if (hasCid()) {
            sb.append("cid:").append(cid).append(",");
        }
        if (hasUpSpeed()) {
            sb.append("up_speed:").append(up_speed).append(",");
        }
        if (hasDnSpeed()) {
            sb.append("dn_speed:").append(dn_speed).append(",");
        }
        if (hasSnr()) {
            sb.append("snr:").append(snr).append(",");
        }
        if (hasVersion()) {
            sb.append("version:").append(version).append(",");
        }
        if (hasUid()) {
            sb.append("uid:").append(uid).append(",");
        }

        //remove last ','
        sb.setLength(sb.length() - 1);

        sb.append(" }");

        return sb.toString();
    }
}

