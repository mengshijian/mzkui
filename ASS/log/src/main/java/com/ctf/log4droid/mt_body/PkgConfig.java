package com.ctf.log4droid.mt_body;

import java.io.*;

import com.google.protobuf.ByteString;
import com.ctf.ass_public.utils.ConvUtils;
import com.ctf.log4droid.protobuf.log4droid;
import com.google.protobuf.ByteString;

import java.util.ArrayList;

import com.ctf.log4droid.protobuf.log4droid.GRADE;
import com.ctf.log4droid.protobuf.log4droid.LEVEL;
import com.ctf.log4droid.protobuf.log4droid.TRANSPORT;
import com.ctf.log4droid.protobuf.log4droid.NETWORK_TYPE;
import com.ctf.log4droid.protobuf.log4droid.RSQ;
import com.google.protobuf.InvalidProtocolBufferException;
import io.netty.buffer.ByteBuf;

/*
 * This file is auto generated by *proto_convert*
 *  and should *NOT* be modified manually!!!
 */
public class PkgConfig implements Serializable {
    //---------------------------------------------------------------------------
    // ALL fields (private)
    //---------------------------------------------------------------------------
    //required fields

    //optional fields
    private int ItvDispOn;
    private int ItvDispOff;
    private int AckTimeout;
    private int RetryTimeout;
    private int RetryLimit;

    //---------------------------------------------------------------------------
    // DEFAULT value for optional fields (private static final)
    //---------------------------------------------------------------------------
    private static final int DEFAULT_ITVDISPON = 30;
    private static final int DEFAULT_ITVDISPOFF = 180;
    private static final int DEFAULT_ACKTIMEOUT = 20;
    private static final int DEFAULT_RETRYTIMEOUT = 10;
    private static final int DEFAULT_RETRYLIMIT = 5;

    //---------------------------------------------------------------------------
    // Constructed Function
    //---------------------------------------------------------------------------
    // <> is *required*
    public PkgConfig() {
        this(DEFAULT_ITVDISPON, DEFAULT_ITVDISPOFF, DEFAULT_ACKTIMEOUT, DEFAULT_RETRYTIMEOUT, DEFAULT_RETRYLIMIT);
    }

    public PkgConfig(int ItvDispOn, int ItvDispOff, int AckTimeout, int RetryTimeout, int RetryLimit) {
        this.ItvDispOn = ItvDispOn;
        this.ItvDispOff = ItvDispOff;
        this.AckTimeout = AckTimeout;
        this.RetryTimeout = RetryTimeout;
        this.RetryLimit = RetryLimit;
    }

    //---------------------------------------------------------------------------
    // decode Constructed Function
    //---------------------------------------------------------------------------
    public PkgConfig(log4droid.PkgConfig kgConfig) {
        //decode with required fields
        this();
        //---------------------------
        //optional fields
        if (kgConfig.hasItvDispOn()) {
            this.ItvDispOn = kgConfig.getItvDispOn();
        }
        if (kgConfig.hasItvDispOff()) {
            this.ItvDispOff = kgConfig.getItvDispOff();
        }
        if (kgConfig.hasAckTimeout()) {
            this.AckTimeout = kgConfig.getAckTimeout();
        }
        if (kgConfig.hasRetryTimeout()) {
            this.RetryTimeout = kgConfig.getRetryTimeout();
        }
        if (kgConfig.hasRetryLimit()) {
            this.RetryLimit = kgConfig.getRetryLimit();
        }
    }

    public static PkgConfig parseFrom(byte[] bytes) throws InvalidProtocolBufferException {
        log4droid.PkgConfig pkgConfig = log4droid.PkgConfig.parseFrom(bytes);
        int ItvDispOn = pkgConfig.getItvDispOn();
        int ItvDispOff = pkgConfig.getItvDispOff();
        int AckTimeout = pkgConfig.getAckTimeout();
        int RetryTimeout = pkgConfig.getRetryTimeout();
        int RetryLimit = pkgConfig.getRetryLimit();


        PkgConfig _ret = new PkgConfig(ItvDispOn,ItvDispOff,AckTimeout,RetryTimeout,RetryLimit);
        return _ret;
    }

    //---------------------------------------------------------------------------
    // getter Functions
    //---------------------------------------------------------------------------
    //required fields

    //optional fields
    public boolean hasItvDispOn() {
        return (this.ItvDispOn != DEFAULT_ITVDISPON);
    }

    public int getItvDispOn() {
        return this.ItvDispOn;
    }

    public boolean hasItvDispOff() {
        return (this.ItvDispOff != DEFAULT_ITVDISPOFF);
    }

    public int getItvDispOff() {
        return this.ItvDispOff;
    }

    public boolean hasAckTimeout() {
        return (this.AckTimeout != DEFAULT_ACKTIMEOUT);
    }

    public int getAckTimeout() {
        return this.AckTimeout;
    }

    public boolean hasRetryTimeout() {
        return (this.RetryTimeout != DEFAULT_RETRYTIMEOUT);
    }

    public int getRetryTimeout() {
        return this.RetryTimeout;
    }

    public boolean hasRetryLimit() {
        return (this.RetryLimit != DEFAULT_RETRYLIMIT);
    }

    public int getRetryLimit() {
        return this.RetryLimit;
    }

    //---------------------------------------------------------------------------
    // setter Functions
    //---------------------------------------------------------------------------
    public void setItvDispOn(int ItvDispOn) {
        this.ItvDispOn = ItvDispOn;
    }

    public void setItvDispOff(int ItvDispOff) {
        this.ItvDispOff = ItvDispOff;
    }

    public void setAckTimeout(int AckTimeout) {
        this.AckTimeout = AckTimeout;
    }

    public void setRetryTimeout(int RetryTimeout) {
        this.RetryTimeout = RetryTimeout;
    }

    public void setRetryLimit(int RetryLimit) {
        this.RetryLimit = RetryLimit;
    }

    //--------------------------------------
    // encode (Java obj => Proto builder)
    //--------------------------------------

    public int toBytes(ByteBuf buf) {
        log4droid.PkgConfig.Builder builder = log4droid.PkgConfig.newBuilder();

        //required fields

        //optional fields
        if (hasItvDispOn()) {
            builder.setItvDispOn(ItvDispOn);
        }
        if (hasItvDispOff()) {
            builder.setItvDispOff(ItvDispOff);
        }
        if (hasAckTimeout()) {
            builder.setAckTimeout(AckTimeout);
        }
        if (hasRetryTimeout()) {
            builder.setRetryTimeout(RetryTimeout);
        }
        if (hasRetryLimit()) {
            builder.setRetryLimit(RetryLimit);
        }


        byte[] bytes = builder.build().toByteArray();
        buf.writeBytes(bytes);
        return bytes.length;
    }

    public log4droid.PkgConfig.Builder toBuilder() {
        log4droid.PkgConfig.Builder builder = log4droid.PkgConfig.newBuilder();

        //required fields

        //optional fields
        if (hasItvDispOn()) {
            builder.setItvDispOn(ItvDispOn);
        }
        if (hasItvDispOff()) {
            builder.setItvDispOff(ItvDispOff);
        }
        if (hasAckTimeout()) {
            builder.setAckTimeout(AckTimeout);
        }
        if (hasRetryTimeout()) {
            builder.setRetryTimeout(RetryTimeout);
        }
        if (hasRetryLimit()) {
            builder.setRetryLimit(RetryLimit);
        }

        //return
        return builder;
    }

    //---------------------------------------------------------------------------
    // toString Function
    //---------------------------------------------------------------------------
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();

        sb.append("PkgConfig { ");

        //required fields

        //optional fields
        if (hasItvDispOn()) {
            sb.append("ItvDispOn:").append(ItvDispOn).append(",");
        }
        if (hasItvDispOff()) {
            sb.append("ItvDispOff:").append(ItvDispOff).append(",");
        }
        if (hasAckTimeout()) {
            sb.append("AckTimeout:").append(AckTimeout).append(",");
        }
        if (hasRetryTimeout()) {
            sb.append("RetryTimeout:").append(RetryTimeout).append(",");
        }
        if (hasRetryLimit()) {
            sb.append("RetryLimit:").append(RetryLimit).append(",");
        }

        //remove last ','
        sb.setLength(sb.length() - 1);

        sb.append(" }");

        return sb.toString();
    }
}

