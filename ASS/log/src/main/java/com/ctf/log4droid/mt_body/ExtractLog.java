package com.ctf.log4droid.mt_body;

import com.ctf.log4droid.protobuf.log4droid;
import com.google.protobuf.InvalidProtocolBufferException;
import io.netty.buffer.ByteBuf;

import java.io.Serializable;

/*
 * This file is auto generated by *proto_convert*
 *  and should *NOT* be modified manually!!!
 */
public class ExtractLog  implements Serializable{
    //---------------------------------------------------------------------------
    // ALL fields (private)
    //---------------------------------------------------------------------------
    //required fields

    //optional fields
    private int startSec;
    private int endSec;
    private String levelFilter;
    private int sizeLimit;
    private String logPath;
    private String uploadMethod;

    //---------------------------------------------------------------------------
    // DEFAULT value for optional fields (private static final)
    //---------------------------------------------------------------------------
    private static final int DEFAULT_STARTSEC = -1;
    private static final int DEFAULT_ENDSEC = -1;
    private static final String DEFAULT_LEVELFILTER = null;
    private static final int DEFAULT_SIZELIMIT = -1;
    private static final String DEFAULT_LOGPATH = null;
    private static final String DEFAULT_UPLOADMETHOD = null;

    //---------------------------------------------------------------------------
    // Constructed Function
    //---------------------------------------------------------------------------
    // <> is *required*
    public ExtractLog() {
        this(DEFAULT_STARTSEC, DEFAULT_ENDSEC, DEFAULT_LEVELFILTER, DEFAULT_SIZELIMIT, DEFAULT_LOGPATH, DEFAULT_UPLOADMETHOD);
    }

    public ExtractLog(int startSec, int endSec, String levelFilter, int sizeLimit, String logPath, String uploadMethod) {
        this.startSec = startSec;
        this.endSec = endSec;
        this.levelFilter = levelFilter;
        this.sizeLimit = sizeLimit;
        this.logPath = logPath;
        this.uploadMethod = uploadMethod;
    }

    //---------------------------------------------------------------------------
    // decode Constructed Function
    //---------------------------------------------------------------------------

    public ExtractLog(log4droid.ExtractLog xtractLog) {
        //decode with required fields
        this();
        //---------------------------
        //optional fields
        if (xtractLog.hasStartSec()) {
            this.startSec = xtractLog.getStartSec();
        }
        if (xtractLog.hasEndSec()) {
            this.endSec = xtractLog.getEndSec();
        }
        if (xtractLog.hasLevelFilter()) {
            this.levelFilter = xtractLog.getLevelFilter();
        }
        if (xtractLog.hasSizeLimit()) {
            this.sizeLimit = xtractLog.getSizeLimit();
        }
        if (xtractLog.hasLogPath()) {
            this.logPath = xtractLog.getLogPath();
        }
        if (xtractLog.hasUploadMethod()) {
            this.uploadMethod = xtractLog.getUploadMethod();
        }
    }

    public static ExtractLog parseFrom(byte[] bytes) throws InvalidProtocolBufferException {
        log4droid.ExtractLog _extractLog = log4droid.ExtractLog.parseFrom(bytes);
        int startSec = _extractLog.getStartSec();
        int endSec = _extractLog.getEndSec();
        String levelFilter = _extractLog.getLevelFilter();
        int sizeLimit = _extractLog.getSizeLimit();
        String logPath = _extractLog.getLogPath();
        String uploadMethod = _extractLog.getUploadMethod();

        ExtractLog _ret = new ExtractLog(startSec,endSec,levelFilter,sizeLimit,logPath,uploadMethod);
        return _ret;
    }

    //---------------------------------------------------------------------------
    // getter Functions
    //---------------------------------------------------------------------------
    //required fields

    //optional fields
    public boolean hasStartSec() {
        return (this.startSec != DEFAULT_STARTSEC);
    }
    public int getStartSec() {
        return this.startSec;
    }
    public boolean hasEndSec() {
        return (this.endSec != DEFAULT_ENDSEC);
    }
    public int getEndSec() {
        return this.endSec;
    }
    public boolean hasLevelFilter() {
        return (this.levelFilter != DEFAULT_LEVELFILTER);
    }
    public String getLevelFilter() {
        return this.levelFilter;
    }
    public boolean hasSizeLimit() {
        return (this.sizeLimit != DEFAULT_SIZELIMIT);
    }
    public int getSizeLimit() {
        return this.sizeLimit;
    }
    public boolean hasLogPath() {
        return (this.logPath != DEFAULT_LOGPATH);
    }
    public String getLogPath() {
        return this.logPath;
    }
    public boolean hasUploadMethod() {
        return (this.uploadMethod != DEFAULT_UPLOADMETHOD);
    }
    public String getUploadMethod() {
        return this.uploadMethod;
    }

    //---------------------------------------------------------------------------
    // setter Functions
    //---------------------------------------------------------------------------
    public void setStartSec(int startSec){
        this.startSec = startSec;
    }
    public void setEndSec(int endSec){
        this.endSec = endSec;
    }
    public void setLevelFilter(String levelFilter){
        this.levelFilter = levelFilter;
    }
    public void setSizeLimit(int sizeLimit){
        this.sizeLimit = sizeLimit;
    }
    public void setLogPath(String logPath){
        this.logPath = logPath;
    }
    public void setUploadMethod(String uploadMethod){
        this.uploadMethod = uploadMethod;
    }
   //--------------------------------------
   // encode (Java obj => Proto builder)
   //--------------------------------------

    public log4droid.ExtractLog.Builder toBuilder() {
        log4droid.ExtractLog.Builder builder = log4droid.ExtractLog.newBuilder();

        //required fields

        //optional fields
        if (hasStartSec()) {
            builder.setStartSec(startSec);
        }
        if (hasEndSec()) {
            builder.setEndSec(endSec);
        }
        if (hasLevelFilter()) {
            builder.setLevelFilter(levelFilter);
        }
        if (hasSizeLimit()) {
            builder.setSizeLimit(sizeLimit);
        }
        if (hasLogPath()) {
            builder.setLogPath(logPath);
        }
        if (hasUploadMethod()) {
            builder.setUploadMethod(uploadMethod);
        }

        //return
        return builder;
    }
    public int toBytes(ByteBuf buf) {
        log4droid.ExtractLog.Builder builder = log4droid.ExtractLog.newBuilder();
        builder.setStartSec(this.startSec);
        builder.setEndSec(this.endSec);
        builder.setLevelFilter(this.levelFilter);
        builder.setSizeLimit(this.sizeLimit);
        builder.setLogPath(this.logPath);
        builder.setUploadMethod(this.uploadMethod);

        byte[] bytes = builder.build().toByteArray();
        buf.writeBytes(bytes);
        return bytes.length;
    }


    //---------------------------------------------------------------------------
    // toString Function
    //---------------------------------------------------------------------------
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();

        sb.append("ExtractLog { ");

        //required fields

        //optional fields
        if (hasStartSec()) {
            sb.append("startSec:").append(startSec).append(",");
        }
        if (hasEndSec()) {
            sb.append("endSec:").append(endSec).append(",");
        }
        if (hasLevelFilter()) {
            sb.append("levelFilter:").append(levelFilter).append(",");
        }
        if (hasSizeLimit()) {
            sb.append("sizeLimit:").append(sizeLimit).append(",");
        }
        if (hasLogPath()) {
            sb.append("logPath:").append(logPath).append(",");
        }
        if (hasUploadMethod()) {
            sb.append("uploadMethod:").append(uploadMethod).append(",");
        }

        //remove last ','
        sb.setLength(sb.length() - 1);

        sb.append(" }");

        return sb.toString();
    }
}

