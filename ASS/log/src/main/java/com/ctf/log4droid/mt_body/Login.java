package com.ctf.log4droid.mt_body;

import java.io.*;

import com.google.protobuf.ByteString;
import com.ctf.ass_public.utils.ConvUtils;
import com.ctf.log4droid.protobuf.log4droid;
import com.google.protobuf.ByteString;

import java.util.ArrayList;

import com.ctf.log4droid.protobuf.log4droid.GRADE;
import com.ctf.log4droid.protobuf.log4droid.LEVEL;
import com.ctf.log4droid.protobuf.log4droid.TRANSPORT;
import com.ctf.log4droid.protobuf.log4droid.NETWORK_TYPE;
import com.ctf.log4droid.protobuf.log4droid.RSQ;
import com.google.protobuf.InvalidProtocolBufferException;
import io.netty.buffer.ByteBuf;

/*
 * This file is auto generated by *proto_convert*
 *  and should *NOT* be modified manually!!!
 */
public class Login implements Serializable {
    //---------------------------------------------------------------------------
    // ALL fields (private)
    //---------------------------------------------------------------------------
    //required fields

    //optional fields
    private String username;
    private byte[] password;
    private byte[] proto_ver;
    private byte[] codes_ver;

    //---------------------------------------------------------------------------
    // DEFAULT value for optional fields (private static final)
    //---------------------------------------------------------------------------
    private static final String DEFAULT_USERNAME = null;
    private static final byte[] DEFAULT_PASSWORD = null;
    private static final byte[] DEFAULT_PROTO_VER = null;
    private static final byte[] DEFAULT_CODES_VER = null;

    //---------------------------------------------------------------------------
    // Constructed Function
    //---------------------------------------------------------------------------
    // <> is *required*
    public Login() {
        this(DEFAULT_USERNAME, DEFAULT_PASSWORD, DEFAULT_PROTO_VER, DEFAULT_CODES_VER);
    }

    public Login(String username, byte[] password, byte[] proto_ver, byte[] codes_ver) {
        this.username = username;
        this.password = password;
        this.proto_ver = proto_ver;
        this.codes_ver = codes_ver;
    }

    //---------------------------------------------------------------------------
    // decode Constructed Function
    //---------------------------------------------------------------------------
    public Login(log4droid.Login login) {
        //decode with required fields
        this();
        //---------------------------
        //optional fields
        if (login.hasUsername()) {
            this.username = login.getUsername();
        }
        if (login.hasPassword()) {
            this.password = login.getPassword().toByteArray();
        }
        if (login.hasProtoVer()) {
            this.proto_ver = login.getProtoVer().toByteArray();
        }
        if (login.hasCodesVer()) {
            this.codes_ver = login.getCodesVer().toByteArray();
        }
    }

    public static Login parseFrom(byte[] bytes) throws InvalidProtocolBufferException {
        log4droid.Login login = log4droid.Login.parseFrom(bytes);

        String username = login.getUsername();
        byte[] password = login.getPassword().toByteArray();
        byte[] proto_ver = login.getProtoVer().toByteArray();
        byte[] codes_ver = login.getCodesVer().toByteArray();

        Login _ret = new Login(username,password,proto_ver,codes_ver);
        return _ret;
    }


    //---------------------------------------------------------------------------
    // getter Functions
    //---------------------------------------------------------------------------
    //required fields

    //optional fields
    public boolean hasUsername() {
        return (this.username != DEFAULT_USERNAME);
    }

    public String getUsername() {
        return this.username;
    }

    public boolean hasPassword() {
        return (this.password != DEFAULT_PASSWORD);
    }

    public byte[] getPassword() {
        return this.password;
    }

    public boolean hasProtoVer() {
        return (this.proto_ver != DEFAULT_PROTO_VER);
    }

    public byte[] getProtoVer() {
        return this.proto_ver;
    }

    public boolean hasCodesVer() {
        return (this.codes_ver != DEFAULT_CODES_VER);
    }

    public byte[] getCodesVer() {
        return this.codes_ver;
    }

    //---------------------------------------------------------------------------
    // setter Functions
    //---------------------------------------------------------------------------
    public void setUsername(String username) {
        this.username = username;
    }

    public void setPassword(byte[] password) {
        this.password = password;
    }

    public void setProtoVer(byte[] proto_ver) {
        this.proto_ver = proto_ver;
    }

    public void setCodesVer(byte[] codes_ver) {
        this.codes_ver = codes_ver;
    }

    //--------------------------------------
    // encode (Java obj => Proto builder)
    //--------------------------------------
    public int toBytes(ByteBuf buf) {
        log4droid.Login.Builder builder = log4droid.Login.newBuilder();

        //required fields

        //optional fields
        if (hasUsername()) {
            builder.setUsername(username);
        }
        if (hasPassword()) {
            builder.setPassword(ByteString.copyFrom(password));
        }
        if (hasProtoVer()) {
            builder.setProtoVer(ByteString.copyFrom(proto_ver));
        }
        if (hasCodesVer()) {
            builder.setCodesVer(ByteString.copyFrom(codes_ver));
        }

        byte[] bytes = builder.build().toByteArray();
        buf.writeBytes(bytes);
        return bytes.length;
    }
    public log4droid.Login.Builder toBuilder() {
        log4droid.Login.Builder builder = log4droid.Login.newBuilder();

        //required fields

        //optional fields
        if (hasUsername()) {
            builder.setUsername(username);
        }
        if (hasPassword()) {
            builder.setPassword(ByteString.copyFrom(password));
        }
        if (hasProtoVer()) {
            builder.setProtoVer(ByteString.copyFrom(proto_ver));
        }
        if (hasCodesVer()) {
            builder.setCodesVer(ByteString.copyFrom(codes_ver));
        }

        //return
        return builder;
    }
    //---------------------------------------------------------------------------
    // toString Function
    //---------------------------------------------------------------------------
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();

        sb.append("Login { ");

        //required fields

        //optional fields
        if (hasUsername()) {
            sb.append("username:").append(username).append(",");
        }
        if (hasPassword()) {
            sb.append("password:").append(ConvUtils.bytesToHexStr(password)).append(",");
        }
        if (hasProtoVer()) {
            sb.append("proto_ver:").append(ConvUtils.bytesToHexStr(proto_ver)).append(",");
        }
        if (hasCodesVer()) {
            sb.append("codes_ver:").append(ConvUtils.bytesToHexStr(codes_ver)).append(",");
        }

        //remove last ','
        sb.setLength(sb.length() - 1);

        sb.append(" }");

        return sb.toString();
    }
}

