package com.ctf.log4droid.mt_body;

import com.ctf.log4droid.protobuf.log4droid;
import com.google.protobuf.InvalidProtocolBufferException;
import io.netty.buffer.ByteBuf;

import java.io.Serializable;

/*
 * This file is auto generated by *proto_convert*
 *  and should *NOT* be modified manually!!!
 */
public class LogConfig implements Serializable {
    //---------------------------------------------------------------------------
    // ALL fields (private)
    //---------------------------------------------------------------------------
    //required fields

    //optional fields
    private int log2FileEnable;
    private String log2FileParam;

    //---------------------------------------------------------------------------
    // DEFAULT value for optional fields (private static final)
    //---------------------------------------------------------------------------
    private static final int DEFAULT_LOG2FILEENABLE = -1;
    private static final String DEFAULT_LOG2FILEPARAM = null;

    //---------------------------------------------------------------------------
    // Constructed Function
    //---------------------------------------------------------------------------
    // <> is *required*
    public LogConfig() {
        this(DEFAULT_LOG2FILEENABLE, DEFAULT_LOG2FILEPARAM);
    }

    public LogConfig(int log2FileEnable, String log2FileParam) {
        this.log2FileEnable = log2FileEnable;
        this.log2FileParam = log2FileParam;
    }

    //---------------------------------------------------------------------------
    // decode Constructed Function
    //---------------------------------------------------------------------------
    public LogConfig(log4droid.LogConfig ogConfig) {
        //decode with required fields
        this();
        //---------------------------
        //optional fields
        if (ogConfig.hasLog2FileEnable()) {
            this.log2FileEnable = ogConfig.getLog2FileEnable();
        }
        if (ogConfig.hasLog2FileParam()) {
            this.log2FileParam = ogConfig.getLog2FileParam();
        }
    }

    public static LogConfig parseFrom(byte[] bytes) throws InvalidProtocolBufferException {
        log4droid.LogConfig logConfig = log4droid.LogConfig.parseFrom(bytes);

        int log2FileEnable = logConfig.getLog2FileEnable();
        String log2FileParam = logConfig.getLog2FileParam();

        LogConfig _ret = new LogConfig(log2FileEnable, log2FileParam);

        return _ret;
    }

    //---------------------------------------------------------------------------
    // getter Functions
    //---------------------------------------------------------------------------
    //required fields

    //optional fields
    public boolean hasLog2FileEnable() {
        return (this.log2FileEnable != DEFAULT_LOG2FILEENABLE);
    }

    public int getLog2FileEnable() {
        return this.log2FileEnable;
    }

    public boolean hasLog2FileParam() {
        return (this.log2FileParam != DEFAULT_LOG2FILEPARAM);
    }

    public String getLog2FileParam() {
        return this.log2FileParam;
    }

    //---------------------------------------------------------------------------
    // setter Functions
    //---------------------------------------------------------------------------
    public void setLog2FileEnable(int log2FileEnable) {
        this.log2FileEnable = log2FileEnable;
    }

    public void setLog2FileParam(String log2FileParam) {
        this.log2FileParam = log2FileParam;
    }

    //--------------------------------------
    // encode (Java obj => Proto builder)
    //--------------------------------------
    public int toBytes(ByteBuf buf) {
        log4droid.LogConfig.Builder builder = log4droid.LogConfig.newBuilder();

        //required fields

        //optional fields
        builder.setLog2FileEnable(log2FileEnable);
        builder.setLog2FileParam(log2FileParam);

        byte[] bytes = builder.build().toByteArray();
        buf.writeBytes(bytes);
        return bytes.length;
    }

    public log4droid.LogConfig.Builder toBuilder() {
        log4droid.LogConfig.Builder builder = log4droid.LogConfig.newBuilder();

        //required fields

        //optional fields
        if (hasLog2FileEnable()) {
            builder.setLog2FileEnable(log2FileEnable);
        }
        if (hasLog2FileParam()) {
            builder.setLog2FileParam(log2FileParam);
        }

        //return
        return builder;
    }
    //---------------------------------------------------------------------------
    // toString Function
    //---------------------------------------------------------------------------
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();

        sb.append("LogConfig { ");

        //required fields

        //optional fields
        if (hasLog2FileEnable()) {
            sb.append("log2FileEnable:").append(log2FileEnable).append(",");
        }
        if (hasLog2FileParam()) {
            sb.append("log2FileParam:").append(log2FileParam).append(",");
        }

        //remove last ','
        sb.setLength(sb.length() - 1);

        sb.append(" }");

        return sb.toString();
    }
}

